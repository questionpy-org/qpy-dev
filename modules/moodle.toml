### moodle:start

[tool.poe.tasks."moodle:start"]
help = "Start Moodle Docker stack."
cwd = "./vendor/moodle-docker"
deps = [
  "_git:clone:ensure-repos-moodle",
  "_moodle:add-local-yml",
  "_moodle:ensure-moodle-config",
  "_moodle:ensure-docker",
  "_utils:msg moodle:start",
]
sequence = [
  "_moodle:hook MOODLE_DOCKER_PRE_START_HOOK '${COLOR_TASK}[moodle:start] ${COLOR_MSG}Pre-start hook...${COLOR_OFF}'",
  { cmd = "./bin/moodle-docker-compose up -d" },
  '_utils:msg moodle:start "Waiting for DB..."',
  { cmd = "./bin/moodle-docker-wait-for-db" },
  "_moodle:hook MOODLE_DOCKER_POST_START_HOOK '${COLOR_TASK}[moodle:start] ${COLOR_MSG}Post-start hook...${COLOR_OFF}'",
  '_utils:msg moodle:start "Moodle running on http://localhost:${MOODLE_DOCKER_WEB_PORT}/"',
]

[tool.poe.tasks."moodle:start".env]
MOODLE_DOCKER_WWWROOT = "${POE_ROOT}/vendor/moodle"
COMPOSE_PROJECT_NAME= "${MOODLE_DOCKER_COMPOSE_PROJECT_NAME}"

### moodle:stop

[tool.poe.tasks."moodle:stop"]
help = "Stop Moodle stack."
cwd = "./vendor/moodle-docker"
deps = [
  "_git:clone:ensure-repos-moodle",
  "_moodle:ensure-docker",
  "_utils:msg moodle:stop",
]
sequence = [
  "_moodle:hook MOODLE_DOCKER_PRE_STOP_HOOK '${COLOR_TASK}[moodle:stop] ${COLOR_MSG}Pre-stop hook...${COLOR_OFF}'",
  { cmd = "./bin/moodle-docker-compose stop" },
  "_moodle:hook MOODLE_DOCKER_POST_STOP_HOOK '${COLOR_TASK}[moodle:stop] ${COLOR_MSG}Post-stop hook...${COLOR_OFF}'",
]

[tool.poe.tasks."moodle:stop".env]
MOODLE_DOCKER_WWWROOT = "${POE_ROOT}/vendor/moodle"
COMPOSE_PROJECT_NAME= "${MOODLE_DOCKER_COMPOSE_PROJECT_NAME}"

### moodle:rm

[tool.poe.tasks."moodle:rm"]
help = "Destroy Moodle stack (clear database)."
cwd = "./vendor/moodle-docker"
deps = [
  "_git:clone:ensure-repos-moodle",
  "_moodle:ensure-docker",
  "_utils:msg moodle:rm",
]
cmd = "./bin/moodle-docker-compose rm --volumes"

[tool.poe.tasks."moodle:rm".env]
MOODLE_DOCKER_WWWROOT = "${POE_ROOT}/vendor/moodle"
COMPOSE_PROJECT_NAME= "${MOODLE_DOCKER_COMPOSE_PROJECT_NAME}"

### moodle:logs

[tool.poe.tasks."moodle:logs"]
help = "Follow Moodle logs."
cwd = "./vendor/moodle-docker"
deps = [
  "_git:clone:ensure-repos-moodle",
  "_moodle:ensure-docker",
  "_utils:msg moodle:logs",
]
cmd = "./bin/moodle-docker-compose logs --follow --tail=100 webserver"

[tool.poe.tasks."moodle:logs".env]
MOODLE_DOCKER_WWWROOT = "${POE_ROOT}/vendor/moodle"
COMPOSE_PROJECT_NAME= "${MOODLE_DOCKER_COMPOSE_PROJECT_NAME}"

### moodle:docker-compose

[tool.poe.tasks."moodle:docker-compose"]
help = "Moodle docker-compose command."
cwd = "./vendor/moodle-docker"
deps = [
  "_git:clone:ensure-repos-moodle",
  "_moodle:ensure-docker",
  "_utils:msg moodle:docker-compose",
]
cmd = "./bin/moodle-docker-compose"

[tool.poe.tasks."moodle:docker-compose".env]
MOODLE_DOCKER_WWWROOT = "${POE_ROOT}/vendor/moodle"
COMPOSE_PROJECT_NAME= "${MOODLE_DOCKER_COMPOSE_PROJECT_NAME}"

### private tasks

# Patch webserver service
# - Add entry to /etc/hosts file, so that Moodle can access the QPy server
#   using a fixed host name.
# - Add qtype-questionpy as mounted volume.
[tool.poe.tasks."_moodle:add-local-yml"]
cwd = "./vendor/moodle-docker"
deps = ["_git:clone:ensure-repos-qpy-qtype"]
shell = """
  [[ -f local.yml ]] && exit 0
  echo 'version: "2"
  services:
    webserver:
      extra_hosts:
        - "host.docker.internal:host-gateway"
      volumes:
        - "${POE_ROOT}/questionpy/moodle-qtype:/var/www/html/question/type/questionpy"' > local.yml
"""

[tool.poe.tasks."_moodle:ensure-moodle-config"]
shell = """
  [[ -f vendor/moodle/config.php ]] && exit 0
  cp vendor/moodle-docker/config.docker-template.php vendor/moodle/config.php
"""

[tool.poe.tasks."_moodle:ensure-docker"]
shell = """
  if ! $(docker info >/dev/null 2>&1); then
    echo -e "${COLOR_WARN}Docker daemon is not running!${COLOR_OFF}"
    exit 1
  fi
"""

[tool.poe.tasks."_moodle:hook"]
shell = """
  if [[ -n "${!name}" ]]; then
    echo -e "${msg}${COLOR_OFF}"
    eval "${!name}"
  fi
"""
args = [
  { "name" = "name", positional = true, required = true },
  { "name" = "msg",  positional = true, required = true },
]
