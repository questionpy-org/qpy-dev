### qpy:serve

[tool.poe.tasks."qpy:serve"]
help = "Run QPy dev server."
sequence = [
  "_qpy:serve-msg qpy:serve",
  "_qpy:serve",
]

### qpy:watch

[tool.poe.tasks."qpy:watch"]
help = "Run QPy dev server (watch mode)."
sequence = [
  "_qpy:serve-msg qpy:watch",
  "_qpy:watch",
]

### private tasks

[tool.poe.tasks."_qpy:ensure-config"]
cwd = "./questionpy/server"
shell = """
  if [[ ! -f config.ini ]]; then
    cp config.example.ini config.ini
  fi
"""

[tool.poe.tasks."_qpy:ensure-cache-dir"]
cwd = "./questionpy/server"
cmd = "mkdir -p cache/packages cache/repo_index"

[tool.poe.tasks."_qpy:serve"]
cwd = "./questionpy/server"
cmd = "python -m questionpy_server"
deps = [
  "_clone:ensure-repos:qpy",
  "_qpy:ensure-config",
  "_qpy:ensure-cache-dir",
]

[tool.poe.tasks."_qpy:watch"]
cwd = "./questionpy/server"
cmd = "watchmedo auto-restart --pattern '*.py' --directory \"${POE_ROOT}/questionpy/server/questionpy_server\" --recursive --debounce-interval 1 python -- -m questionpy_server"
deps = [
  "_clone:ensure-repos:qpy",
  "_qpy:ensure-config",
  "_qpy:ensure-cache-dir",
]

[tool.poe.tasks."_qpy:serve-msg"]
ref = '_utils:msg ${task_name} "Starting QuestionPy server on http://${QPY_WEBSERVICE__LISTEN_ADDRESS}:${QPY_WEBSERVICE__PORT}. Use http://host.docker.internal:${QPY_WEBSERVICE__PORT} as URL in the QuestionPy Moodle settings."'
args = [{ name = "task_name", positional = true, required = true }]
