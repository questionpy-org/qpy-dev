### git:clone

[tool.poe.tasks."git:clone:all"]
help = "Clone all repositories."
deps = ["_utils:msg git:clone:all"]
sequence = [
  "_git:clone:ensure-repos-qpy",
  "_git:clone:ensure-repos-qpy-qtype",
  "_git:clone:ensure-repos-moodle",
]

### private tasks

[tool.poe.tasks."_git:clone:ensure-repos-qpy"]
sequence = [
  "_git:clone $REPO_QUESTIONPY_COMMON ./questionpy/common",
  "_git:clone $REPO_QUESTIONPY_DOCS   ./questionpy/docs",
  "_git:clone $REPO_QUESTIONPY_SDK    ./questionpy/sdk",
  "_git:clone $REPO_QUESTIONPY_SERVER ./questionpy/server",
]

[tool.poe.tasks."_git:clone:ensure-repos-qpy-qtype"]
ref = "_git:clone $REPO_MOODLE_QTYPE_QUESTIONPY ./questionpy/moodle-qtype"

[tool.poe.tasks."_git:clone:ensure-repos-moodle"]
sequence = [
  "_git:clone $REPO_MOODLE            ./vendor/moodle        --branch $REPO_MOODLE_TAG",
  "_git:clone $REPO_MOODLE_DOCKER     ./vendor/moodle-docker --branch main",
]

[tool.poe.tasks."_git:clone"]
shell = """
  if [[ ! -d "$dir" ]]; then
    git clone --branch $branch $repo "$dir"
  else
    exit 0
  fi
"""
args = [
  { "name" = "repo",   positional = true, required = true },
  { "name" = "dir",    positional = true, required = true },
  { "name" = "branch", default = "dev" },
]
